# name: Deploy to production

# on:
#   push:
#     branches: [main]

# jobs:
#   deploy:
#     permissions:
#       id-token: write
#       contents: read

#     name: Build image
#     runs-on: ubuntu-latest

#     steps:
#       - name: Check out code
#         uses: actions/checkout@v2

#       - name: Install kubectl
#         uses: azure/setup-kubectl@v3
#         with:
#           version: 'v1.21.3'
#         id: install

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           role-to-assume: arn:aws:iam::975050247140:role/gh-actions-rol
#           aws-region: sa-east-1

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v2

#       - name: Load secrets and save to app.env
#         run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

#       - name: Build, tag, and push docker image to Amazon ECR
#         env:
#           REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           REPOSITORY: simplebank
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           docker build -t $ECT_REGISTRY/$ECT_$REPOSITORY:$IMAGE_TAG -t $ECT_REGISTRY/$ECT_$REPOSITORY:latest .
#           docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

#       - name: Update kube config
#         run: aws eks update-kubeconfig --name simplebank --region sa-east-1

#       - name: Deploy image to amazon eks
#         run: |
#           kubectl apply -f eks/aws-auth.yml
#           kubectl apply -f eks/deployment.yml
#           kubectl apply -f eks/service.yml
#           kubectl apply -f eks/issuer.yml
#           kubectl apply -f eks/ingress.yml
